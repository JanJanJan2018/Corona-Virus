install.packages('quantmod') # used for quantitative finance in R
library(quantmod)
install.packages('PerformanceAnalytics')
library(quantmod)
library(PerformanceAnalytics)
?quantmod
?getSymbols
dt <- '2017-2-1'
aapl <- getSymbols.yahoo('AAPL', from = dt, auto.assign=F)
head(aapl)
colnames(aapl)
dt <- '2017-2-1'
aapl <- getSymbols.yahoo('AAPL', from = dt, auto.assign=F)
# the above object is an 'xts' object or extensible time series object used in #financial markets
head(aapl)
dim(aapl)
colnames(aapl)
dim(aapl)
row.names[1:20]
dim(aapl)
row.names(aapl)[1:20]
colnames(aapl)
dt <- '2017-2-1'
aapl <- getSymbols.yahoo('AAPL', from = dt, auto.assign=F)
# the above object is an 'xts' object or extensible time series object used in #financial markets
head(aapl)
aaplClose <- aapl[,6]
# use of the PerformanceAnalytics library loaded earlier
appleReturns <- dailyReturn(aaplClose, type='log')
aaplClose <- aapl[,6]
# use of the PerformanceAnalytics library loaded earlier
appleReturns <- dailyReturn(aaplClose, type='log')
appleReturns1 <- na.omit(dailyReturn(aaplClose, type='log'))
head(appleReturns)
head(appleReturns1)
chartSeries(aapl)
install.packages('h2o')
library(h2o)
h2o.init(nthreads=-1, max_mem_size="2G")
h2o.removeAll() ## clean slate - just in case the cluster was already running
D = h2o.importFile(path = normalizePath("../data/covtype.full.csv"))
h2o.summary(D)
h2o.init()
library(h2o)
h2o.init(nthreads=-1, max_mem_size="2G")
h2o.removeAll() ## clean slate - just in case the cluster was already running
D = h2o.importFile(path = normalizePath("../data/covtype.full.csv"))
h2o.summary(D)
D = h2o.importFile(path = normalizePath("../data/covtype.full.csv"))
h2o.summary(D)
D = h2o.importFile(path = normalizePath("../data/covtype.full.csv"))
D = h2o.importFile(path = normalizePath("../desktop/covtype.full.csv"))
h2o.summary(D)
data = h2o.splitFrame(D,ratios=c(.7,.15),destination_frames = c("train","test","valid"))
names(data)
m1 = h2o.glm(training_frame = data$Train, validation_frame = data$Valid, x = x, y = y,family='multinomial',solver='L_BFGS')
View(data)
m1 = h2o.glm(training_frame = data$train, validation_frame = data$valid, x = x, y = y,family='multinomial',solver='L_BFGS')
h2o.summary(D)
data = h2o.splitFrame(D,ratios=c(.7,.15),
destination_frames = c("train","test","valid"))
names(data)
data = h2o.splitFrame(D,ratios=c(.7,.15,.15),
destination_frames = c("train","test","valid"))
names(data)
data = h2o.splitFrame(D,ratios=c(.7,.15),
destination_frames = c("train","test","valid"))
names(data)
m1 = h2o.glm(training_frame = data$train, validation_frame = data$valid,
x = x, y = y,family='multinomial',solver='L_BFGS')
m1 = h2o.glm(training_frame = data$Train, validation_frame = data$Valid,
x = x, y = y,family='multinomial',solver='L_BFGS')
m1 = h2o.glm(training_frame = data$Train, validation_frame = data$Valid,
x = x, y = y,family='multinomial',solver='L_BFGS')
data$Train
data$train
h2o.summary(D)
data
names(data) <- c('Train','Test','Valid')
m1 = h2o.glm(training_frame = data$Train, validation_frame = data$Valid,
x = x, y = y,family='multinomial',solver='L_BFGS')
data$Train
x <- data$Train[1:12]
y <- Cover_Type
m1 = h2o.glm(training_frame = data$Train, validation_frame = data$Valid,
x = x, y = y,family='multinomial',solver='L_BFGS')
y <- data$Train[13]
m1 = h2o.glm(training_frame = data$Train, validation_frame = data$Valid,
x = x, y = y,family='multinomial',solver='L_BFGS')
x <- data$Train[,1:12]
y <- data$Train[,13]
m1 = h2o.glm(training_frame = data$Train, validation_frame = data$Valid,
x = x, y = y,family='multinomial',solver='L_BFGS')
setwd("C:/Users/m/Downloads")
GSE100509 <- read.delim("GSE100509_series_matrix.txt", header=TRUE, na.strings=c('',' '),)
GSE100509 <- read.delim("GSE100509_series_matrix.txt", header=TRUE, na.strings=c('',' '),comment.char='!'
)
View(GSE100509)
colnames(GSE100509)[2:6] <- paste(colnames(GSE100509[2:6], 'MERS_CoV_0hr', sep='_')
)
colnames(GSE100509)[2:6] <- paste(colnames(GSE100509)[2:6], 'MERS_CoV_0hr', sep='_')
colnames(GSE100509)[7:11] <- paste(colnames(GSE100509)[7:11], 'ctrl_0hr', sep='_')
colnames(GSE100509)[12:16] <- paste(colnames(GSE100509)[12:16], 'MERS_CoV_12hr', sep='_')
colnames(GSE100509)[17:21] <- paste(colnames(GSE100509)[17:21], 'ctrl_12hr', sep='_')
colnames(GSE100509)[22:26] <- paste(colnames(GSE100509)[22:26], 'Mers_CoV_24hr', sep='_')
colnames(GSE100509)[27:31] <- paste(colnames(GSE100509)[27:31], 'ctrl_24hr', sep='_')
colnames(GSE100509)[27:31] <- paste(colnames(GSE100509)[32:36], 'MERS_CoV_36hr', sep='_')
colnames(GSE100509)[32:31] <- paste(colnames(GSE100509)[32:36], 'MERS_CoV_36hr', sep='_')
GSE100509 <- read.delim("GSE100509_series_matrix.txt", header=TRUE, na.strings=c('',' '),comment.char='!'
+ )
GSE100509 <- read.delim("GSE100509_series_matrix.txt", header=TRUE, na.strings=c('',' '),comment.char='!')
colnames(GSE100509)[2:6] <- paste(colnames(GSE100509[2:6], 'MERS_CoV_0hr', sep='_')
colnames(GSE100509)[2:6] <- paste(colnames(GSE100509)[2:6], 'MERS_CoV_0hr', sep='_')
colnames(GSE100509)[2:6] <- paste(colnames(GSE100509)[2:6], 'MERS_CoV_0hr', sep='_')
colnames(GSE100509)[7:11] <- paste(colnames(GSE100509)[7:11], 'ctrl_0hr', sep='_')
colnames(GSE100509)[12:16] <- paste(colnames(GSE100509)[12:16], 'MERS_CoV_12hr', sep='_')
colnames(GSE100509)[17:21] <- paste(colnames(GSE100509)[17:21], 'ctrl_12hr', sep='_')
colnames(GSE100509)[22:26] <- paste(colnames(GSE100509)[22:26], 'Mers_CoV_24hr', sep='_')
colnames(GSE100509)[27:31] <- paste(colnames(GSE100509)[27:31], 'ctrl_24hr', sep='_')
colnames(GSE100509)[32:36] <- paste(colnames(GSE100509)[32:36], 'MERS_CoV_36hr', sep='_')
colnames(GSE100509)[37:41] <- paste(colnames(GSE100509)[37:41], 'ctrl_36hr', sep='_')
colnames(GSE100509)[42:46] <- paste(colnames(GSE100509)[42:46], 'MERS_CoV_48hr', sep='_')
colnames(GSE100509)[47:51] <- paste(colnames(GSE100509)[47:51], 'ctrl_48hr', sep='_')
colnames(GSE100509)
colnames(GSE100509)[22:26] <- gsub('Mers' ,'MERS', colnames(GSE100509))
colnames(GSE100509)
GSE100509 <- read.delim("GSE100509_series_matrix.txt", header=TRUE, na.strings=c('',' '),comment.char='!')
colnames(GSE100509)[2:6] <- paste(colnames(GSE100509)[2:6], 'MERS_CoV_0hr', sep='_')
colnames(GSE100509)[7:11] <- paste(colnames(GSE100509)[7:11], 'ctrl_0hr', sep='_')
colnames(GSE100509)[12:16] <- paste(colnames(GSE100509)[12:16], 'MERS_CoV_12hr', sep='_')
colnames(GSE100509)[17:21] <- paste(colnames(GSE100509)[17:21], 'ctrl_12hr', sep='_')
colnames(GSE100509)[22:26] <- paste(colnames(GSE100509)[22:26], 'MERS_CoV_24hr', sep='_')
colnames(GSE100509)[27:31] <- paste(colnames(GSE100509)[27:31], 'ctrl_24hr', sep='_')
colnames(GSE100509)[32:36] <- paste(colnames(GSE100509)[32:36], 'MERS_CoV_36hr', sep='_')
colnames(GSE100509)[37:41] <- paste(colnames(GSE100509)[37:41], 'ctrl_36hr', sep='_')
colnames(GSE100509)[42:46] <- paste(colnames(GSE100509)[42:46], 'MERS_CoV_48hr', sep='_')
colnames(GSE100509)[47:51] <- paste(colnames(GSE100509)[47:51], 'ctrl_48hr', sep='_')
colnames(GSE100509)
setwd("C:/Users/m/Desktop/CoV arrays and chip sequence")
write.csv(GSE100509,'GSE100509.csv', row.names=FALSE)
setwd("C:/Users/m/Downloads")
GPL <- read.delim('GPL13497-9755.txt', header=TRUE, comment.char='!',na.strings=C('',' '), sep='\t')
GPL <- read.delim('GPL13497-9755.txt', header=TRUE, comment.char='!',na.strings= c('',' '), sep='\t')
GPL <- read.delim('GPL13497-9755.txt', header=TRUE, comment.char='#',na.strings= c('',' '), sep='\t')
View(GPL)
GPL2 <- GPL[,c(1,7)]
View(GPL2)
GPL3 <- complete.cases(GPL2)
GPL3 <- GPL2[complete.cases(GPL2),]
setwd("C:/Users/m/Desktop/CoV arrays and chip sequence")
write.csv(GPL3,'GPL13497.csv', row.names=FALSE)
GSE100509_genes <- merge(GPL3,GSE100509, by.x='ID', by.y='ID_REF')
View(GSE100509_genes)
GSE100509_2 <- GSE100509_genes[,-1]
View(GSE100509_2)
library(dplyr)
CoV <- GSE100509_2 %>% group_by(GENE_SYMBOL) %>% summarise_at(as.vector(colnames(GSE100509_2)[2:51], mean, na.rm=TRUE))
CoV <- GSE100509_2 %>% group_by(GENE_SYMBOL) %>% summarise_at(as.vector(colnames(GSE100509_2)[2:51]), mean, na.rm=TRUE)
View(CoV)
write.csv(CoV, 'MERS_CoV_GSE100509_clean.csv', row.names=FALSE)
GPL16699 <- read.delim('GPL16699-15607.txt', sep='\t', header=TRUE, na.strings=c('',' '), comment.char='#')
GSE89166 <- read.csv()
GSE89166 <- read.csv()
GSE89166 <- read.csv("GSE89166_GSE100509.csv", header=TRUE, sep=',', na.strings=c('',' '))
GSE89166 <- read.csv("GSE89166_GSE89160.csv", header=TRUE, sep=',', na.strings=c('',' '))
View(GSE89166)
View(GPL16699)
GPL <- GPL16699[,c(1,10)]
View(GPL)
GPL1 <- GPL[complete.cases(GPL1),]
GPL1 <- GPL[complete.cases(GPL),]
View(GPL1)
View(GSE89166)
GSE89166_89160 <- merge(GPL1, GSE89166, by.x='ID', by.y='ID_REF')
View(GSE89166_89160)
GSE <- GSE89166_89160[,-1]
View(GSE)
GSE_89 <- GSE %>% group_by(GENE_SYMBOL) %>% summarise_at(as.vector(colnames(GSE)[2:13]), mean, na.rm=TRUE)
View(GSE_89)
write.csv(GSE_89,'GSE89166_89160_clean.csv', row.names=FALSE)
GSE89 <- read.csv('GSE89166_89160_clean.csv', sep=',', header=TRUE, na.strings=c('',' '))
GSE100 <- read.csv('MERS_CoV_SGE100509_clean.csv', sep=',', header=TRUE, na.strings=c('',' '))
GSE100 <- read.csv('MERS_CoV_GSE100509_clean.csv', sep=',', header=TRUE, na.strings=c('',' '))
View(GSE100)
View(GSE89)
Both <- merge(GSE89, GSE100, by.x='GENE_SYMBOL', by.y='GENE_SYMBOL')
View(Both)
write.csv(Both, 'both_liver_capillary_studies.csv', row.names=FALSE)
colnames(Both)
colnames(Both)[c(14,19,24,29,34,39,44,49,54,59)] <- paste(colnames(Both)[c(14,19,24,29,34,39,44,49,54,59)],'_A_', sep='')
colnames(Both)
colnames(Both)[c(14,19,24,29,34,39,44,49,54,59)] <- gsub('_A_','_A',colnames(Both)[c(14,19,24,29,34,39,44,49,54,59)])
colnames(Both)
colnames(Both)[c(15,20,25,30,35,40,45,50,55,60)] <- paste(colnames(Both)[c(15,20,25,30,35,40,45,50,55,60)],'_B', sep='')
colnames(Both)
colnames(Both)[c(16,21,26,31,36,41,46,51,56,61)] <- paste(colnames(Both)[c(16,21,26,31,36,41,46,51,56,61)],'_C', sep='')
colnames(Both)
colnames(Both)[c(17,22,27,32,37,42,47,52,57,62)] <- paste(colnames(Both)[c(17,22,27,32,37,42,47,52,57,62)],'_D', sep='')
colnames(Both)
colnames(Both)[c(18,23,28,33,38,43,48,53,58,63)] <- paste(colnames(Both)[c(18,23,28,33,38,43,48,53,58,63)],'_E', sep='')
colnames(Both)
write.csv(Both,'both_clean_liver_capillary_CoV.csv', row.names=FALSE)
View(Both)
colnames(Both)[2:13] <- paste('LiverTumorSamples',colnames(Both)[2:13])
colnames(Both)[14:63] <- paste('capillarySamples', colnames(Both)[14:63])
colnames(Both)
write.csv(Both, 'both_clean_liver_capillary_CoV.csv', row.names=FALSE)
